name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        go:
          - 1.18
        arch:
          - amd64
        runner:
          - ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: test-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            test-${{ runner.os }}-go-

      - name: Build
        env:
          GOARCH: ${{ matrix.arch }}
          GOFLAGS: ${{ matrix.flags }}
        run: go build ./...

      - name: Test
        env:
          GOARCH: ${{ matrix.arch }}
          GOFLAGS: ${{ matrix.flags }}
          LOG_LEVEL: error
        run: go test -v ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45.2
          only-new-issues: true
          args: --timeout 5m

  # Check if there are any dirty changes after go mod tidy & make gen-doc
  dirty-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: dirty-changes-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            dirty-changes-${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download && go mod tidy

      - name: Generate doc
        run: make gen-doc

      - name: Generate mocks
        run: make mock

      - name: Check git diff
        run: git diff --exit-code
