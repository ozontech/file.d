elasticsearch:
  # security:
  #   enabled: true
  #   elasticPassword: "changeme"
  #   tls:
  #     # AutoGenerate TLS certs for elastic
  #     autoGenerated: true
  master:
    masterOnly: false
    replicaCount: 1
    persistence:
      enabled: true
    initContainers:
      - name: file-permissions
        image: busybox:1.28
        command: ['chmod', '-R', '0777', '/bitnami/elasticsearch/']
        securityContext:
            runAsUser: 0
        volumeMounts:
        - mountPath: /bitnami/elasticsearch/data
          name: data
  data:
    replicaCount: 0
  coordinating:
    replicaCount: 0
  ingest:
    replicaCount: 0

input:
  type: k8s
  file_config:
    persistence_mode: async
    filename_pattern: "*"
  watching_dir: /var/log/containers/
  offsets_file: /data/k8s-offsets.yaml
  allowed_pod_labels: [app, jobid]

actions:
  - type: discard                             # discard some events 
    match_fields:
      k8s_container: /filed/
    match_mode: or
  - type: debug
    interval: 10s
    first: 1
  - type: join                                # join golang panics from stderr
    field: log
    start: '/^(panic:)|(http: panic serving)/'
    continue: '/(^\s*$)|(goroutine [0-9]+ \[)|(\([0-9]+x[0-9,a-f]+)|(\.go:[0-9]+ \+[0-9]x)|(\/.*\.go:[0-9]+)|(\(...\))|(main\.main\(\))|(created by .*\/.*\.)|(^\[signal)|(panic.+[0-9]x[0-9,a-f]+)|(panic:)/'
    match_fields:
      stream: stderr
  - type: throttle                            # throttle pod logs if throughput is more than 3000/minute
    default_limit: 3000
    throttle_field: k8s_pod
    bucket_interval: 1m
    buckets_count: 60
  - type: keep_fields                         # keep only meaningful fields of event
    fields: [time, stream, log, k8s_namespace, k8s_pod, k8s_container, k8s_node, k8s_label_app, k8s_label_jobid]

volumeMounts:
  - name: data
    mountPath: "/data"
  - name: k8s-containers
    mountPath: "/var/log/containers"
    readOnly: true
  - name: k8s-pods
    mountPath: "/var/log/pods"
    readOnly: true
  - name: docker-containers
    mountPath: "/var/lib/docker/containers"
    readOnly: true
volumes:
  - hostPath:
      path: /data/file-d/
      type: DirectoryOrCreate
    name: data
  - hostPath:
      path: /var/log/containers
    name: k8s-containers
  - hostPath:
      path: /var/log/pods/
    name: k8s-pods
  - hostPath:
      path: /var/lib/docker/containers
    name: docker-containers
